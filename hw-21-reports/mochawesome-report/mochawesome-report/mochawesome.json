{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2025-04-12T19:22:15.191Z",
    "end": "2025-04-12T19:22:36.752Z",
    "duration": 21561,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4d3c1d9f-a6d4-4e54-a03a-468ab2188037",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fb4fa7f5-1011-4fc6-8b1f-ecb35d8ec658",
          "title": "Pact V3 User service contract tests",
          "fullFile": "/Users/olha/my-home-work-js/MyJavaScriptHomeWork/hw-21-reports/mocha/tests/user-service-pact-v3.spec.ts",
          "file": "/tests/user-service-pact-v3.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should retrieve the user by username",
              "fullTitle": "Pact V3 User service contract tests should retrieve the user by username",
              "timedOut": false,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "provider.given(\"User 'user1' exists\").uponReceiving(\"A request to get user details\").withRequest({method:\"GET\",path:\"/v2/user/user1\"}).willRespondWith({status:200,headers:{\"content-type\":\"application/json\"},body:expectedBody});return provider.executeTest(async mockUserService=>{userService=new import_user.UserService(mockUserService.url);const user=await userService.getUserName(\"user1\");(0,import_chai.expect)(user.data).to.deep.eq(userRequestExample)})",
              "err": {},
              "uuid": "53473c0a-04f7-4cf6-b374-5e0da926a1a3",
              "parentUUID": "fb4fa7f5-1011-4fc6-8b1f-ecb35d8ec658",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "8576b621-387b-40c3-b068-ccf115a8d1e4",
              "title": "Consumer tests using Pact V3",
              "fullFile": "/Users/olha/my-home-work-js/MyJavaScriptHomeWork/hw-21-reports/mocha/tests/user-service-pact-v3.spec.ts",
              "file": "/tests/user-service-pact-v3.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should create user",
                  "fullTitle": "Pact V3 User service contract tests Consumer tests using Pact V3 Should create user",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "provider.given(\"user interaction\").uponReceiving(\"A request to create a new user\").withRequest({method:\"POST\",path:\"/v2/user/createWithList\",headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"},body:[userRequestExample]}).willRespondWith({status:200,headers:{\"content-Type\":\"application/json\"},body:userResponseExample});return provider.executeTest(async mockUserService=>{userService=new import_user.UserService(mockUserService.url);const responsePost=await userService.createUser([userRequestExample]);(0,import_chai.expect)(responsePost.data).to.deep.eq(userResponseExample)})",
                  "err": {},
                  "uuid": "1605486c-d647-4c8a-a0f7-5e85b8317f24",
                  "parentUUID": "8576b621-387b-40c3-b068-ccf115a8d1e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1605486c-d647-4c8a-a0f7-5e85b8317f24"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 120000
            }
          ],
          "passes": [
            "53473c0a-04f7-4cf6-b374-5e0da926a1a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 136,
          "root": false,
          "rootEmpty": false,
          "_timeout": 120000
        },
        {
          "uuid": "4645300c-075b-44bc-80be-f2d36fd070fc",
          "title": "Pact V3 verification",
          "fullFile": "/Users/olha/my-home-work-js/MyJavaScriptHomeWork/hw-21-reports/mocha/tests/user-service-pact-v3.spec.ts",
          "file": "/tests/user-service-pact-v3.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify provider",
              "fullTitle": "Pact V3 verification verify provider",
              "timedOut": false,
              "duration": 7222,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "return new import_pact.Verifier({providerBaseUrl:\"https://petstore.swagger.io\",pactUrls:[path.resolve(process.cwd(),\"./pacts/user-consumer-v3-user-provider-v3.json\")]}).verifyProvider().then(()=>{console.log(\"Pact Verification Complete!\")})",
              "err": {
                "message": "Error: Verfication failed",
                "estack": "Error: Verfication failed\n    at <anonymous> (/Users/olha/node_modules/@pact-foundation/pact-core/src/verifier/nativeVerifier.ts:52:20)",
                "diff": null
              },
              "uuid": "1f83bb03-1923-4a04-9d77-e0d3b9bf6458",
              "parentUUID": "4645300c-075b-44bc-80be-f2d36fd070fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1f83bb03-1923-4a04-9d77-e0d3b9bf6458"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 120000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 120000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "[object Object]": true
      },
      "version": "6.2.0"
    }
  }
}