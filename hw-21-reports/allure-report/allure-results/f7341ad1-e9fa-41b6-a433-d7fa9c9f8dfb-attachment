# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Ford Login >> Ford Login With Email
- Location: /Users/olha/my-home-work-js/MyJavaScriptHomeWork/hw-21-reports/allure-report/tests/setup/ford-login.spec.ts:5:9

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toBeVisible()

Locator: locator('//li[@id="brand-nav-user-li3-dsk"]//span[@class="link-text" and text()="Olha\'s Account"]')
Expected: visible
Received: <element(s) not found>
Call log:
  - expect.toBeVisible with timeout 5000ms
  - waiting for locator('//li[@id="brand-nav-user-li3-dsk"]//span[@class="link-text" and text()="Olha\'s Account"]')

    at FordLoginPage.expectLoggedIn (/Users/olha/my-home-work-js/MyJavaScriptHomeWork/hw-21-reports/allure-report/src/pages/ford-login.page.ts:89:38)
    at /Users/olha/my-home-work-js/MyJavaScriptHomeWork/hw-21-reports/allure-report/tests/setup/ford-login.spec.ts:10:29
```

# Page snapshot

```yaml
- img "Company Logo"
- heading "Sign In" [level=4]
- form "Sign in with your email":
  - text: Email
  - textbox "Email": vatsykolga@gmail.com
  - text: Password
  - textbox "Password": MyPassword1308CO##
  - link "Forgot password?"
  - button "Sign In"
  - paragraph:
    - text: Don't have an account?
    - link "Create Account"
- contentinfo:
  - list:
    - listitem:
      - link "Your Privacy Choices"
    - listitem:
      - link "Disconnect Remote Vehicle Access"
    - listitem:
      - link "Privacy Notice"
    - listitem:
      - link "Contact Us"
    - listitem: Cookie Settings
- region "Cookie banner":
  - dialog "Privacy":
    - text: This website uses cookies and other tracking technologies to enhance user experience, display targeted ads, and to analyze performance, user activity, and traffic on our website. We also may share personal information about your activity on our website with our advertising, analytics, and business partners.
    - link "More information about your privacy, opens in a new tab": Privacy Notice.
    - button "Cookie Settings"
    - button "Close"
```

# Test source

```ts
   1 | import { BrowserContext, Locator, Page, expect } from '@playwright/test';
   2 | import * as fs from 'fs';
   3 |
   4 | export class FordLoginPage {
   5 |     private get fordLogo(): Locator {
   6 |         return this.page.locator('a#brand-nav-logo-lnk-center');
   7 |     }
   8 |
   9 |     private get welcomeAccountLink(): Locator {
  10 |         return this.page.locator('#brand-nav-user-btn-dsk');
  11 |     }
  12 |
  13 |     private get signInButton(): Locator {
  14 |         return this.page.locator('li#brand-nav-user-li1-dsk');
  15 |     }
  16 |
  17 |     private get emailInput(): Locator {
  18 |         return this.page.locator('#signInName');
  19 |     }
  20 |
  21 |     private get passwordInput(): Locator {
  22 |         return this.page.locator('#password');
  23 |     }
  24 |
  25 |     private get loginButton(): Locator {
  26 |         return this.page.locator('button#next');
  27 |     }
  28 |
  29 |     private get userAccount(): Locator {
  30 |         return this.page.locator('//button[@id="brand-nav-user-btn-dsk"]//span[text()="Hi, Olha"]');
  31 |     }
  32 |
  33 |     private get myAccount(): Locator {
  34 |         return this.page.locator('//li[@id="brand-nav-user-li3-dsk"]//span[@class="link-text" and text()="Olha\'s Account"]');
  35 |     }
  36 |
  37 |     private async waitForLoadingToFinish(): Promise<void> {
  38 |         const loading = this.page.locator('text=Please do not click the back button or refresh the page.');
  39 |         try {
  40 |             await loading.waitFor({state: 'visible', timeout: 5000});
  41 |         } catch {
  42 |             // If it doesn't show up, it's not essential.
  43 |         }
  44 |         await loading.waitFor({state: 'hidden', timeout: 45000});
  45 |     }
  46 |
  47 |     public constructor(private page: Page, private context: BrowserContext) {}
  48 |
  49 |     public async goto(): Promise<void> {
  50 |         await this.page.goto('https://www.ford.com/');
  51 |         await this.fordLogo.waitFor();
  52 |     }
  53 |
  54 |     public async loginWithEmail(username: string, password: string): Promise<void> {
  55 |         console.log('[login] Navigating to Ford');
  56 |         await this.goto();
  57 |
  58 |         console.log('[login] Checking if already logged in...');
  59 |         const alreadyLoggedIn = await this.userAccount.isVisible();
  60 |         if (alreadyLoggedIn) {
  61 |             console.log('[login] User already logged in â€” skipping login.');
  62 |             return;
  63 |         }
  64 |         await this.welcomeAccountLink.click();
  65 |
  66 |         console.log('[login] Waiting for popup sign-in button');
  67 |         await this.signInButton.click();
  68 |
  69 |         console.log('[login] Filling in email');
  70 |         await this.emailInput.fill(username);
  71 |
  72 |         console.log('[login] Filling in password');
  73 |         await this.passwordInput.fill(password);
  74 |
  75 |         console.log('[login] Clicking login button');
  76 |         await this.loginButton.click();
  77 |
  78 |         console.log('[login] Waiting for MyAccount to confirm login');
  79 |         await this.waitForLoadingToFinish();
  80 |
  81 |         console.log('[login] Saving browser storage state');
  82 |         const browserState = await this.context.storageState();
  83 |         fs.writeFileSync('browser-context.json', JSON.stringify(browserState, null, 2));
  84 |
  85 |         console.log('[login] Login flow complete');
  86 |     }
  87 |
  88 |     public async expectLoggedIn(): Promise<void> {
> 89 |         await expect(this.myAccount).toBeVisible();
     |                                      ^ Error: Timed out 5000ms waiting for expect(locator).toBeVisible()
  90 |     }
  91 | }
  92 |
```