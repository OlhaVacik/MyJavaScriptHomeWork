{
	"info": {
		"_postman_id": "cbee25bf-6aa3-4afd-aad7-c8a81de07247",
		"name": "TheCatsApiIntegretion",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "25067509"
	},
	"item": [
		{
			"name": "AddNewImageCat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Generated by id\", function () {",
							"",
							"    const jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.collectionVariables.set(\"catId\", jsonData.id);",
							"});",
							"",
							"pm.test(\"The catId is saved\", function () {",
							"        pm.expect(pm.collectionVariables.get(\"catId\")).to.not.be.undefined;",
							"});",
							"",
							"pm.test(\"Generated by url\", function () {",
							"",
							"    const jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property(\"url\");",
							"    pm.collectionVariables.set(\"catUrl\", jsonData.url);",
							"});",
							"",
							"pm.test(\"The catUrl is saved\", function () {",
							"        pm.expect(pm.collectionVariables.get(\"catUrl\")).to.not.be.undefined;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "live_MSfW2RmO1luNhd4ebIPlVn3YxAUtqaSSN3x4JUAej9flPItrjzBpxdGDu9yvEkFe",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "postman-cloud:///1effd15e-cf4a-4010-9b43-9159e4adcaa1"
						},
						{
							"key": "sub_id",
							"value": "My-cats",
							"type": "text"
						}
					]
				},
				"url": "{{base-url}}v1/images/upload"
			},
			"response": []
		},
		{
			"name": "SearchNewImageCat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response contains the same image URL\", function () {",
							"    let jsonData = pm.response.json();",
							"    let storedUrl = pm.collectionVariables.get(\"catUrl\");",
							"    pm.expect(jsonData.url).to.equal(storedUrl);",
							"});",
							"",
							"pm.test(\"catId is correctly passed in the request\", function () {",
							"    let requestUrl = pm.request.url.toString();",
							"    let storedImageId = pm.collectionVariables.get(\"catId\");",
							"",
							"    pm.expect(storedImageId).to.not.be.undefined;",
							"    pm.expect(storedImageId).to.not.be.empty;",
							"    pm.expect(requestUrl).to.include(storedImageId);",
							"});",
							"",
							"pm.test(\"API returns correct image data\", function () {",
							"    let jsonData = pm.response.json();",
							"    let storedImageId = pm.collectionVariables.get(\"catId\");",
							"",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.id).to.equal(storedImageId);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"catId before request:\", pm.collectionVariables.get(\"catId\"));",
							"console.log(\"Full request URL:\", pm.environment.get(\"base-url\") + \"v1/images/\" + pm.collectionVariables.get(\"catId\"));",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "live_MSfW2RmO1luNhd4ebIPlVn3YxAUtqaSSN3x4JUAej9flPItrjzBpxdGDu9yvEkFe",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": "{{base-url}}v1/images/{{catId}}"
			},
			"response": []
		},
		{
			"name": "AddBreedNewImageCat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"catId is correctly passed in the request\", function () {",
							"    let requestUrl = pm.request.url.toString();",
							"    let storedImageId = pm.collectionVariables.get(\"catId\");",
							"",
							"    pm.expect(storedImageId).to.not.be.undefined;",
							"    pm.expect(storedImageId).to.not.be.empty;",
							"    pm.expect(requestUrl).to.include(storedImageId);",
							"});",
							"",
							"pm.test(\"Generated by Breed id\", function () {",
							"",
							"    const jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.collectionVariables.set(\"breedId\", jsonData.id);",
							"});",
							"",
							"pm.test(\"The breedId is saved\", function () {",
							"        pm.expect(pm.collectionVariables.get(\"breedId\")).to.not.be.undefined;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"catId before request:\", pm.collectionVariables.get(\"catId\"));",
							"console.log(\"Full request URL:\", pm.environment.get(\"base-url\") + \"v1/images/\" + pm.collectionVariables.get(\"catId\") + \"/breeds\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "live_MSfW2RmO1luNhd4ebIPlVn3YxAUtqaSSN3x4JUAej9flPItrjzBpxdGDu9yvEkFe",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"breed_id\": \"abys\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base-url}}v1/images/{{catId}}/breeds"
			},
			"response": []
		},
		{
			"name": "SearchBreedNewImageCat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"catId is correctly passed in the request\", function () {",
							"    let requestUrl = pm.request.url.toString();",
							"    let storedImageId = pm.collectionVariables.get(\"catId\");",
							"",
							"    pm.expect(storedImageId).to.not.be.undefined;",
							"    pm.expect(storedImageId).to.not.be.empty;",
							"    pm.expect(requestUrl).to.include(storedImageId);",
							"});",
							"",
							"pm.test(\"Breed data is correctly returned and contains expected breed ID\", function () {",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Full API Response:\", JSON.stringify(responseJson, null, 2));",
							"",
							"    pm.expect(responseJson).to.be.an(\"array\");",
							"    pm.expect(responseJson.length).to.be.above(0, \"Breed list is empty!\");",
							"",
							"    let expectedBreedId = \"abys\";",
							"",
							"    let breedFound = responseJson.some(breed => breed.id === expectedBreedId);",
							"",
							"    pm.expect(breedFound, `Breed ID ${expectedBreedId} not found in response!`).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"catId before request:\", pm.collectionVariables.get(\"catId\"));",
							"console.log(\"Full request URL:\", pm.environment.get(\"base-url\") + \"v1/images/\" + pm.collectionVariables.get(\"catId\") + \"/breeds\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "live_MSfW2RmO1luNhd4ebIPlVn3YxAUtqaSSN3x4JUAej9flPItrjzBpxdGDu9yvEkFe",
						"type": "text"
					},
					{
						"key": "Content_Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base-url}}v1/images/{{catId}}/breeds"
			},
			"response": []
		},
		{
			"name": "AddImageToFavorites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Image ID is set correctly\", function () {",
							"    let requestData = pm.request.body.raw;",
							"    let storedImageId = pm.collectionVariables.get(\"catId\");",
							"    pm.expect(requestData).to.include(storedImageId);",
							"});",
							"",
							"pm.test(\"Generated by id of favourite image\", function () {",
							"",
							"    const jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.collectionVariables.set(\"IdFavouriteImage\", jsonData.id);",
							"});",
							"",
							"pm.test(\"The IdFavouriteImage is saved\", function () {",
							"        pm.expect(pm.collectionVariables.get(\"IdFavouriteImage\")).to.not.be.undefined;",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "live_MSfW2RmO1luNhd4ebIPlVn3YxAUtqaSSN3x4JUAej9flPItrjzBpxdGDu9yvEkFe",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "image-id",
						"value": "{{cat-image-id}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"image_id\":\"{{catId}}\",\n\t\"sub_id\": \"My-cats\"\n}"
				},
				"url": "{{base-url}}v1/favourites"
			},
			"response": []
		},
		{
			"name": "CheckAddedImageToFavorites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Cat's Image is in faforite list\",function () {",
							"    const responseJson = pm.response.json();",
							"    console.log(\"API Response:\", responseJson);",
							"",
							"    const expectedImageId = pm.variables.get(\"catId\");",
							"    const expectedImageUrl = pm.variables.get(\"catUrl\");",
							"",
							"    console.log(\"Expected Image Id\",  expectedImageId);",
							"    console.log(\"Expected Image Url\",  expectedImageUrl);",
							"",
							"    if (!expectedImageId || !expectedImageUrl) {",
							"        throw new Error(\"Expected image ID or URL is missing!\");",
							"    }",
							"",
							"    let imageFound = false;",
							"",
							"    for (let i = 0; i < responseJson.length; i++) {",
							"        const fav = responseJson[i];",
							"",
							"        console.log(`Checking favorite #${i}:`, fav);",
							"",
							"        if (fav.image_id === expectedImageId && fav.image && fav.image.url === expectedImageUrl) {",
							"            imageFound = true;",
							"            break;",
							"        }",
							"    }",
							"    ",
							"",
							"    pm.expect(imageFound).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "live_MSfW2RmO1luNhd4ebIPlVn3YxAUtqaSSN3x4JUAej9flPItrjzBpxdGDu9yvEkFe",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "image-id",
						"value": "{{cat-image-id}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "{{base-url}}v1/favourites"
			},
			"response": []
		},
		{
			"name": "VotesAddedImage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Image ID is set correctly\", function () {",
							"    let requestData = pm.request.body.raw;",
							"    let storedImageId = pm.collectionVariables.get(\"catId\");",
							"    pm.expect(requestData).to.include(storedImageId);",
							"});",
							"",
							"pm.test(\"Response value\", function () {",
							"",
							"    const jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property(\"value\");",
							"    pm.collectionVariables.set(\"ValueVotes\", jsonData.value);",
							"});",
							"",
							"pm.test(\"The ValueVotes is saved\", function () {",
							"        pm.expect(pm.collectionVariables.get(\"ValueVotes\")).to.not.be.undefined;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "live_MSfW2RmO1luNhd4ebIPlVn3YxAUtqaSSN3x4JUAej9flPItrjzBpxdGDu9yvEkFe",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"image_id\":\"{{catId}}\",\n\t\"sub_id\": \"My-cats\",\n    \"value\":5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base-url}}v1/votes"
			},
			"response": []
		},
		{
			"name": "CheckVotesMyImageCat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Vote value is correctly saved for My Image\", function () {",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Full API Response:\", JSON.stringify(responseJson, null, 2));",
							"",
							"    const expectedImageId = pm.variables.get(\"catId\");",
							"    const expectedImageUrl = pm.variables.get(\"catUrl\");",
							"    const expectedVoteValue = pm.variables.get('ValueVotes');",
							"",
							"    console.log(\"Expected Image ID:\", expectedImageId);",
							"    console.log(\"Expected Image Url\",  expectedImageUrl);",
							"    console.log(\"Expected Vote Value:\", expectedVoteValue);",
							"",
							"    if (!expectedImageId || !expectedImageUrl) {",
							"        throw new Error(\"Expected image is missing!\");",
							"    }",
							"",
							"    let voteRecord = responseJson.find(vote => vote.image_id === expectedImageId && vote.image?.url === expectedImageUrl && vote.value === expectedVoteValue);",
							"",
							"    console.log(\"Vote Record Found:\", voteRecord);",
							"",
							"    pm.expect(voteRecord, `Vote with value ${expectedVoteValue} for image ${expectedImageId} not found!`).to.exist;",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "live_MSfW2RmO1luNhd4ebIPlVn3YxAUtqaSSN3x4JUAej9flPItrjzBpxdGDu9yvEkFe",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base-url}}v1/votes"
			},
			"response": []
		},
		{
			"name": "DeleteImageCat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Image was successfully deleted\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-api-key",
						"value": "live_MSfW2RmO1luNhd4ebIPlVn3YxAUtqaSSN3x4JUAej9flPItrjzBpxdGDu9yvEkFe",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base-url}}v1/images/{{catId}}"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "x-api-key",
			"value": "live_MSfW2RmO1luNhd4ebIPlVn3YxAUtqaSSN3x4JUAej9flPItrjzBpxdGDu9yvEkFe",
			"type": "string"
		},
		{
			"key": "base-url",
			"value": "https://api.thecatapi.com/",
			"type": "string"
		},
		{
			"key": "catId",
			"value": ""
		},
		{
			"key": "catUrl",
			"value": ""
		},
		{
			"key": "imageId",
			"value": ""
		},
		{
			"key": "imageUrl",
			"value": ""
		},
		{
			"key": "IdFavouriteImage",
			"value": ""
		},
		{
			"key": "breedId",
			"value": ""
		},
		{
			"key": "ValueVotes",
			"value": ""
		},
		{
			"key": "IdFavorite",
			"value": ""
		}
	]
}